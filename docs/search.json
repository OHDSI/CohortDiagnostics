[{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/CreatingAStudyPackage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Creating a study package","text":"currently two approaches run Cohort Diagnostics. - Embed OHDSI study package, cohort definitions stored part study package, - WebAPi mode - cohort diagnostics dynamically pulls cohort definition webapi instance. WebAPI backend OHDSI ATLAS application, allowing programmatic access cohort definitions created ATLAS. vignette describes create self contained shareable study package can execute cohort diagnostics given set cohort definitions. recommended mode run CohortDiagnostics study. vignette, learn - use Cohort Diagnostics template package - Hydrate template package cohort definitions want diagnose. - Execute diagnostics one data sources. - Review result set using Diagnostics Explorer R shiny app Cohort Diagnostics - (optional) Submit results cohort diagnostics OHDSI Phenotype library.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/CreatingAStudyPackage.html","id":"assumptions","dir":"Articles","previous_headings":"Introduction","what":"Assumptions:","title":"Creating a study package","text":"set valid cohort definition sql files (parameterized OHDSI Sql format) want run diagnostics , able export cohort definitions want diagnose Atlas using export tab within cohort definition module Atlas using ROhdsiWebApi described . access person level data OMOP CDM V5.x + format database, able execute instantiate cohorts cohort tables (.e. access schema database Create, Read, Update, Delete privileges.)","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/CreatingAStudyPackage.html","id":"creating-the-study-package","dir":"Articles","previous_headings":"","what":"Creating the study package","title":"Creating a study package","text":"cohorts diagnose two attributes . id: unique integer identifier cohort diagnosing. created cohort using atlas, atlas id. cohortName: unique string name cohort. Usually Atlas cohort name, can name wish identify cohort. name used display cohort Diagnostics Explorer shiny app. Example:","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/CreatingAStudyPackage.html","id":"option-a-using-hydra-and-rohdsiwebapi","dir":"Articles","previous_headings":"Creating the study package","what":"option A: Using Hydra and ROhdsiWebApi","title":"Creating a study package","text":"Note: option required Hydra 0.3, writing document version Hydra develop branch. skeleton cohort diagnostics study package . skeleton package special package designed used Hydra. input Hydra study specifications file (json format). Example .","code":"# please ensure you have the latest version of Hydra. As of 08/13/2021 - CohortDiagnostics support for Hydra is still in develop branch. # please check hydra release notes and update hydra remotes::install_github(\"OHDSI/Hydra\", ref = \"develop\") outputFolder <- \"d:/temp/output\" # location where you study package will be created   ########## Please populate the information below ##################### version <- \"v0.1.0\" name <- \"Thrombosis With Thrombocytopenia Syndrome cohorts - an OHDSI network study\" packageName <- \"ThrombosisWithThrombocytopeniaSyndrome\" skeletonVersion <- \"v0.0.1\" createdBy <- \"rao@ohdsi.org\" createdDate <- Sys.Date() # default modifiedBy <- \"rao@ohdsi.org\" modifiedDate <- Sys.Date() skeletonType <- \"CohortDiagnosticsStudy\" organizationName <- \"OHDSI\" description <- \"Cohort diagnostics on Thrombosis With Thrombocytopenia Syndrome cohorts.\"   library(magrittr) # Set up baseUrl <- Sys.getenv(\"baseUrl\") # if you have security enabled, please authorize the use - example below # ROhdsiWebApi::authorizeWebApi(baseUrl, 'windows') cohortIds <- c(   22040,   22042,   22041,   22039,   22038,   22037,   22036,   22035,   22034,   22033,   22031,   22032,   22030,   22028,   22029 )    ################# end of user input ############## webApiCohorts <- ROhdsiWebApi::getCohortDefinitionsMetaData(baseUrl = baseUrl) studyCohorts <- webApiCohorts %>%   dplyr::filter(.data$id %in% cohortIds)  # compile them into a data table cohortDefinitionsArray <- list() for (i in (1:nrow(studyCohorts))) {   cohortDefinition <-     ROhdsiWebApi::getCohortDefinition(       cohortId = studyCohorts$id[[i]],       baseUrl = baseUrl     )   cohortDefinitionsArray[[i]] <- list(     id = studyCohorts$id[[i]],     createdDate = studyCohorts$createdDate[[i]],     modifiedDate = studyCohorts$createdDate[[i]],     logicDescription = studyCohorts$description[[i]],     name = stringr::str_trim(stringr::str_squish(cohortDefinition$name)),     expression = cohortDefinition$expression   ) }  tempFolder <- tempdir() unlink(x = tempFolder, recursive = TRUE, force = TRUE) dir.create(path = tempFolder, showWarnings = FALSE, recursive = TRUE)  specifications <- list(   id = 1,   version = version,   name = name,   packageName = packageName,   skeletonVersion = skeletonVersion,   createdBy = createdBy,   createdDate = createdDate,   modifiedBy = modifiedBy,   modifiedDate = modifiedDate,   skeletonType = skeletonType,   organizationName = organizationName,   description = description,   cohortDefinitions = cohortDefinitionsArray )  jsonFileName <- paste0(file.path(tempFolder, \"CohortDiagnosticsSpecs.json\")) write(x = specifications %>% RJSONIO::toJSON(pretty = TRUE, digits = 23), file = jsonFileName)   ############################################################## ############################################################## #######       Get skeleton from github            ############ #######       Uncomment if you want to use latest ############ #######       skeleton only - for advanced user   ############ ############################################################## ############################################################## ############################################################## #### get the skeleton from github # download.file(url = \"https://github.com/OHDSI/SkeletonCohortDiagnosticsStudy/archive/refs/heads/main.zip\", #                          destfile = file.path(tempFolder, 'skeleton.zip')) # unzip(zipfile =  file.path(tempFolder, 'skeleton.zip'), #       overwrite = TRUE, #       exdir = file.path(tempFolder, \"skeleton\") #         ) # fileList <- list.files(path = file.path(tempFolder, \"skeleton\"), full.names = TRUE, recursive = TRUE, all.files = TRUE) # DatabaseConnector::createZipFile(zipFile = file.path(tempFolder, 'skeleton.zip'), #                                  files = fileList, #                                  rootFolder = list.dirs(file.path(tempFolder, 'skeleton'), recursive = FALSE))  ############################################################## ############################################################## #######               Build package              ############# ############################################################## ############################################################## ##############################################################   #### Code that uses the ExampleCohortDiagnosticsSpecs in Hydra to build package hydraSpecificationFromFile <- Hydra::loadSpecifications(fileName = jsonFileName) unlink(x = outputFolder, recursive = TRUE) dir.create(path = outputFolder, showWarnings = FALSE, recursive = TRUE) Hydra::hydrate(   specifications = hydraSpecificationFromFile,   outputFolder = outputFolder )  # for advanced user using skeletons outside of Hydra # Hydra::hydrate(specifications = hydraSpecificationFromFile, #                outputFolder = outputFolder, #                skeletonFileName = file.path(tempFolder, 'skeleton.zip') # )   unlink(x = tempFolder, recursive = TRUE, force = TRUE)"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/DatabaseModeInDiagnosticsExplorer.html","id":"database-mode","dir":"Articles","previous_headings":"","what":"Database mode","title":"Database mode in Diagnostics Explorer","text":"recommend use database system, file size cohort diagnostics output becomes large e.g. > 1GB, using premerged.RData may leading sluggish performance. Currently postgres server supported. use DatabaseConnector DbPool manage connections shiny application postgres. recommended method launch Shiny application provide connection details ‘launchDiagnosticsExplorer()’ shiny application. Please review documentation ‘DatabaseConnector::createConnectionDetails()’ function DatabaseConnector package connect server. example script upload data remote postgres server . ‘createResultsDataModel()’ function execute series SQL statements create empty target schema hold results Cohort Diagnostics. upload results, recommend use ‘uploadResults()’ function, provide path postgres driver. data uploaded postgres server - can execute shiny application using ‘launchDiagnosticsExplorer()’ function. Please provide connection details, along schema uploaded results (resultsDatabaseSchema). deploying server, yaml file called config.yml placed DiagnosticsExplorer path. See README.md file directory details configuration. Example yaml settings included :","code":"# Alter these configuration settings for usage with remote databases connectionDetails:   dbms: \"postgresql\"   server: \"my-database-server.com/myDatabaseName\"   user: \"postrgres\"   password: \"secret_password\"   port: 5432  # Store connection details as a json string in keyring # Store with keyring::key_set_with_value(\"KEYNAME\", jsonlite::toJSON(myConnectionDetails)) connectionDetailsSecureKey: ~  # If you used a table prefix to store the results (e.g. cd_) tablePrefix: \"\"  # Results schema being used resultsDatabaseSchema: \"cohort_diagnostics\"  # Vocabulary schemas. Should include the reuslts schema and optional custom vocabularies vocabularyDatabaseSchemas: [\"cohort_diagnostics\"]  # Custom table name for cohorts and cdm databases (probably not needed, ignores table prefix) cohortTableName: \"cohort\" databaseTableName: \"database\"  # If you wish to enable annotation - not currently reccomended in multi-user environments enableAnnotation: FALSE enableAuthorization: FALSE"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/DatabaseModeInDiagnosticsExplorer.html","id":"publishing","dir":"Articles","previous_headings":"","what":"Publishing","title":"Database mode in Diagnostics Explorer","text":"publish config can use: press publish button shiny app loads. Note - situation use secure keys keyring possible.","code":"launchDiagnosticsExplorer(   shinyConfigPath = \"path/to/config.yml\",   makePublishable = TRUE,   publishDir = file.path(getwd(), \"MyStudyDiagnosticsExplorer\"),   overwritePublishDir = TRUE )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/RunningCohortDiagnostics.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Running Cohort Diagnostics","text":"vignette discusses process generating results set CohortDiagnostics starting cohort generation. Please see HADES library information background .","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/RunningCohortDiagnostics.html","id":"pre-requisites","dir":"Articles","previous_headings":"Introduction","what":"pre-requisites","title":"Running Cohort Diagnostics","text":"Ensure CohortDiagnostics installed system updated latest version. example also using Eunomia test package. Optionally, may install ROhdsiWebApi package download cohort definitions ATLAS instance:","code":"remotes::install_github(\"OHDSI/Eunomia\") remotes::install_github(\"OHDSI/ROhdsiWebApi\")"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/RunningCohortDiagnostics.html","id":"configuring-the-connection-to-the-server","dir":"Articles","previous_headings":"","what":"Configuring the connection to the server","title":"Running Cohort Diagnostics","text":"need tell R connect server data . CohortDiagnostics uses DatabaseConnector package, provides createConnectionDetails function. Type ?createConnectionDetails specific settings required various database management systems (DBMS). example, one might connect PostgreSQL database using code: purposes example, use Eunomia test CDM package Sqlite database stored locally. last four lines define cdmDatabaseSchema, tempEmulationSchema, cohortDatabaseSchema, cohortTable variables. ’ll use cdmDatabaseSchema later tell R data CDM format live. tempEmulationSchema needed Oracle users, since Oracle support temporary tables. cohortDatabaseSchema, cohortTable specify want instantiate cohorts. Note Microsoft SQL Server, database schemas need specify database schema, example cdmDatabaseSchema <- \"my_cdm_data.dbo\".","code":"library(CohortDiagnostics)  connectionDetails <- createConnectionDetails(   dbms = \"postgresql\",   server = \"localhost/ohdsi\",   user = \"joe\",   password = \"supersecret\" ) connectionDetails <- Eunomia::getEunomiaConnectionDetails()  cdmDatabaseSchema <- \"main\" tempEmulationSchema <- NULL cohortDatabaseSchema <- \"main\" cohortTable <- \"cohort\""},{"path":[]},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/RunningCohortDiagnostics.html","id":"loading-cohort-references-from-a-package","dir":"Articles","previous_headings":"Running cohort diagnostics","what":"Loading cohort references from a package","title":"Running Cohort Diagnostics","text":"prefered usage cohort diagnostics use study package. dedicated R package can installed system run. primary reason due reproducibility, cohort definitions resources frequently change. However, study package can seen snapshot, frozen time creation incrementally updated. example, cohort diagnostics package includes example set cohort sql json run Eunomia test data OMOP Common Data Model format. Looking data.frame Cohorts see sql json cohorts:","code":"library(CohortDiagnostics) cohortDefinitionSet <- CohortGenerator::getCohortDefinitionSet(   settingsFileName = \"Cohorts.csv\",   jsonFolder = \"cohorts\",   sqlFolder = \"sql/sql_server\",   packageName = \"CohortDiagnostics\" ) View(cohortDefinitionSet)"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/RunningCohortDiagnostics.html","id":"loading-cohort-references-from-webapi","dir":"Articles","previous_headings":"Running cohort diagnostics","what":"Loading cohort references from WebApi","title":"Running Cohort Diagnostics","text":"often desirable perform cohort diagnostics definitions stored ATLAS instance. Though preferred way running studies (certainly preferred method OHDSI network study involving multiple sites) possible load references data frame used cohort diagnostics. following code demonstrates create set cohort references ATLAS can used cohort diagnostics: Consult ROhdsiWebApi documentation details authentication atlas instance. Please note order generate inclusion rules statistics (useful diagnostic tool) parameter generateStats set TRUE.","code":"# Set up url baseUrl <- \"https://atlas.hosting.com/WebAPI\" # list of cohort ids cohortIds <- c(18345, 18346)  cohortDefinitionSet <- ROhdsiWebApi::exportCohortDefinitionSet(   baseUrl = baseUrl,   cohortIds = cohortIds,   generateStats = TRUE )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/RunningCohortDiagnostics.html","id":"generating-cohorts","dir":"Articles","previous_headings":"Running cohort diagnostics","what":"Generating cohorts","title":"Running Cohort Diagnostics","text":"Cohorts must generated cohort diagnostics can run.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/RunningCohortDiagnostics.html","id":"using-cohortgenerator-to-instantiate-cohorts","dir":"Articles","previous_headings":"Running cohort diagnostics > Generating cohorts","what":"Using CohortGenerator to instantiate cohorts","title":"Running Cohort Diagnostics","text":"example, Note, code delete existing table. However, incremental mode can used setting parameter incremental = TRUE. resulting cohort table include columns: cohort_definition_id, subject_id, cohort_start_date, cohort_end_date","code":"cohortTableNames <- CohortGenerator::getCohortTableNames(cohortTable = cohortTable)  # Next create the tables on the database CohortGenerator::createCohortTables(   connectionDetails = connectionDetails,   cohortTableNames = cohortTableNames,   cohortDatabaseSchema = \"main\",   incremental = FALSE )  # Generate the cohort set CohortGenerator::generateCohortSet(   connectionDetails = connectionDetails,   cdmDatabaseSchema = cdmDatabaseSchema,   cohortDatabaseSchema = cohortDatabaseSchema,   cohortTableNames = cohortTableNames,   cohortDefinitionSet = cohortDefinitionSet,   incremental = FALSE )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/RunningCohortDiagnostics.html","id":"executing-cohort-diagnostics","dir":"Articles","previous_headings":"Running cohort diagnostics","what":"Executing cohort diagnostics","title":"Running Cohort Diagnostics","text":"cohort definitions loaded cohort tables populated cohort diagnostics ready executed. First set export folder, results stored. execute function (using default settings) follows:","code":"exportFolder <- \"export\" executeDiagnostics(cohortDefinitionSet,   connectionDetails = connectionDetails,   cohortTable = cohortTable,   cohortDatabaseSchema = cohortDatabaseSchema,   cdmDatabaseSchema = cdmDatabaseSchema,   exportFolder = exportFolder,   databaseId = \"MyCdm\",   minCellCount = 5 )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/RunningCohortDiagnostics.html","id":"cohort-statistics-table-clean-up","dir":"Articles","previous_headings":"Running cohort diagnostics","what":"Cohort Statistics Table Clean up","title":"Running Cohort Diagnostics","text":"cohort generation process create number residual tables. process complete, longer required can removed.","code":"CohortGenerator::dropCohortStatsTables(   connectionDetails = connectionDetails,   cohortDatabaseSchema = cohortDatabaseSchema,   cohortTableNames = cohortTableNames )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/RunningCohortDiagnostics.html","id":"cohort-diagnostics-output","dir":"Articles","previous_headings":"","what":"Cohort Diagnostics Output","title":"Running Cohort Diagnostics","text":"diagnostics completed, zip file created specified export folder. zip file can shared sites, contain patient-identifiable information. unzipped, zip file contain several .csv files maybe easily audited. Note cell counts smaller 5 removed, specified using minCellCount argument, ensure non-identifiability.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/RunningCohortDiagnostics.html","id":"creating-an-sqlite-db-file","dir":"Articles","previous_headings":"Cohort Diagnostics Output","what":"Creating an sqlite db file","title":"Running Cohort Diagnostics","text":"Assuming completed steps described one databases, now set zip files, one per database. Make sure place zip files single folder. Optionally, can pre-merge zip files sqlite database can view results Shiny app: file can used shiny app explore results. See vignette “Viewing results using Diagnostics Explorer” details.","code":"createMergedResultsFile(exportFolder)"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/ViewingResultsUsingDiagnosticsExplorer.html","id":"viewing-the-diagnostics","dir":"Articles","previous_headings":"","what":"Viewing the diagnostics","title":"Viewing results using Diagnostics Explorer","text":"Diagnostics Explorer shiny application able present results output Cohort Diagnostics either local mode (.e. using premerged file) database mode (connected postgres database server). Shiny app can found . Make sure copy files DiagnosticsExplorer folder. launching application. maybe asked install additional packages required app, shiny, shinydashboard, shinyWidgets, DT, htmltools, scales, plotly, dplyr, purrr, tidyr, ggiraph. Note tabs left information icon. Clicking icons show additional information diagnostic, computed, may interpreted.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/ViewingResultsUsingDiagnosticsExplorer.html","id":"launching-diagnostics-explorer","dir":"Articles","previous_headings":"","what":"Launching Diagnostics Explorer","title":"Viewing results using Diagnostics Explorer","text":"R, launch DiagnosticExplorer shiny application calling ‘launchDiagnosticsExplorer()’ function CohortDiagnostics. R-studio, may start project clicking ‘DiagnosticsExplorer.Rproj’ shiny folder, open global.R press ‘RunApp’ button. R-server (shiny server), need copy files DiagnosticsExplorer shiny app folder server. server automatically launch application (please talk shiny server administrator site specific rules.)","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/ViewingResultsUsingDiagnosticsExplorer.html","id":"running-the-app-using-local-file-mode-sqlite-db-","dir":"Articles","previous_headings":"","what":"Running the app using local file mode (Sqlite db).","title":"Viewing results using Diagnostics Explorer","text":"Local mode common mode run Shiny application. recommend convert csv files precomputed output Cohort Diagnostics sqlite database file follows .RData files enables faster load Shiny application. converted results data sqlite database file, may launch Diagnostics Explorer app follows: running application R-studio environment, please make sure sqlite file folder called ‘data’.","code":"createMergedResultsFile(\"C:/temp/allZipFiles\", sqliteDbPath = \"MyCohortDiagnosticsResulst.sqlite\") launchDiagnosticsExplorer(sqliteDbPath = \"MyCohortDiagnosticsResulst.sqlite\")"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/ViewingResultsUsingDiagnosticsExplorer.html","id":"publishing-to-posit-connect-or-shinyapps-io","dir":"Articles","previous_headings":"","what":"Publishing to Posit Connect or shinyapps.io","title":"Viewing results using Diagnostics Explorer","text":"Publishing shiny app shared posit connect source can achieved first setting credentials server. need contact internal administrator publishing access rights. Alternatively, can use shinyapps.io service, provides limited free usage hosting applications. Firstly, advised update latest version OHDSI shiny modules : update dependencies shiny app. Following need copyable resource shiny app. can achieved launching DiagnosticsExplorer publishable options create shiny app folder \"MyStudyDiagnosticsExplorer\" R working directory. also overwrite existing application folder copy sqlite file . Following , shiny window load show “publsh” button. can follow RStudio prompts upload rsconnect/posit connect shinyapps.io server.","code":"remotes::install_packages('OHDSI/OhdsiShinyModules') launchDiagnosticsExplorer(   sqliteDbPath = \"MyCohortDiagnosticsResulst.sqlite\",   makePublishable = TRUE,   publishDir = file.path(getwd(), \"MyStudyDiagnosticsExplorer\"),   overwritePublishDir = TRUE )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/ViewingResultsUsingDiagnosticsExplorer.html","id":"sharing-a-zipped-copy-of-your-shiny-app","dir":"Articles","previous_headings":"","what":"Sharing a zipped copy of your shiny app","title":"Viewing results using Diagnostics Explorer","text":"automatically create zip archive containing DiagnosticsExplorer shiny application deployment shared environments, data.ohdsi.org, run function createDiagnosticsExplorerZip: archive contain fully executable shiny application.","code":"createDiagnosticsExplorerZip(outputZipfile = \"MyCdProject.zip\", sqliteDbPath = \"MyCohortDiagnosticsResulst.sqlite\")"},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/ViewingResultsUsingDiagnosticsExplorer.html","id":"running-the-app-using-database-mode","dir":"Articles","previous_headings":"","what":"Running the app using Database mode","title":"Viewing results using Diagnostics Explorer","text":"recommend use database system, file size cohort diagnostics output becomes large e.g. > 100mb, using sqlite database may leading sluggish performance. Currently, postgres server fully supported, though platforms DatabaseConnector support may work (currently experimental). See Vignette Database mode load data remote database.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/ViewingResultsUsingDiagnosticsExplorer.html","id":"running-over-the-network","dir":"Articles","previous_headings":"","what":"Running over the network","title":"Viewing results using Diagnostics Explorer","text":"want run application network set runOverNetwork = TRUE launching application using ‘launchDiagnosticsExplorer()’. make shiny application available network (.e. within networks firewall).","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/WhatIsCohortDiagnostics.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"What is Cohort Diagnostics?","text":"CohortDiagnostics package allows one generate wide set diagnostics evaluate cohort definitions database Common Data Model (CDM). diagnostics include incidence rates (optionally stratified age, gender, calendar year), cohort characteristics (comorbidities, drug use, etc.), codes found data triggering various rules cohort definitions. CohortDiagnostics package general works two steps: Generate diagnostics database CDM. Explore generated diagnostics Shiny app included CohortDiagnostics package. use Cohort Diagnostics recommended best practice help improve confidence cohort definitions.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/articles/WhatIsCohortDiagnostics.html","id":"features","dir":"Articles","previous_headings":"","what":"Features","title":"What is Cohort Diagnostics?","text":"Show cohort inclusion rule attrition. List source codes used running cohort definition specific database. Find orphan codes, (source) codes , included particular concept set. Compute cohort incidence across calendar years, age, gender. Break index events specific concepts triggered . Compute overlap two cohorts. Characterize cohorts, compare characterizations. Perform cohort comparison temporal comparisons. Explore patient profiles random sample subjects cohort.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jamie Gilbert. Author, maintainer. Gowtham Rao. Author. Martijn Schuemie. Author. Patrick Ryan. Author. James Weaver. Author. Observational Health Data Science Informatics. Copyright holder.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gilbert J, Rao G, Schuemie M, Ryan P, Weaver J (2025). CohortDiagnostics: Diagnostics OHDSI Cohorts. R package version 3.3.1, https://github.com/OHDSI/CohortDiagnostics, https://ohdsi.github.io/CohortDiagnostics.","code":"@Manual{,   title = {CohortDiagnostics: Diagnostics for OHDSI Cohorts},   author = {Jamie Gilbert and Gowtham Rao and Martijn Schuemie and Patrick Ryan and James Weaver},   year = {2025},   note = {R package version 3.3.1, https://github.com/OHDSI/CohortDiagnostics},   url = {https://ohdsi.github.io/CohortDiagnostics}, }"},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"cohortdiagnostics","dir":"","previous_headings":"","what":"Diagnostics for OHDSI Cohorts","title":"Diagnostics for OHDSI Cohorts","text":"CohortDiagnostics part HADES.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Diagnostics for OHDSI Cohorts","text":"CohortDiagnostics R utility package development evaluation phenotype algorithms OMOP CDM compliant data sets. package provides standard, end end, set analytics understanding patient capture including data generation result exploration R Shiny interface. Analytics computed include cohort characteristics, record counts, index event misclassification, captured observation windows basic incidence proportions age, gender calendar year. identification errors, CohortDiagnostics enables comparison multiple candidate cohort definitions across one data sources, facilitating reproducible research.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Diagnostics for OHDSI Cohorts","text":"Show cohort inclusion rule attrition. List source codes used running cohort definition specific database. Find orphan codes, (source) codes , included particular concept set. Compute cohort incidence across calendar years, age, gender. Break index events specific concepts triggered . Compute overlap two cohorts. Characterize cohorts, compare characterizations. Perform cohort comparison temporal comparisons. Explore patient profiles random sample subjects cohort.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"technology","dir":"","previous_headings":"","what":"Technology","title":"Diagnostics for OHDSI Cohorts","text":"CohortDiagnostics package R package.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"system-requirements","dir":"","previous_headings":"","what":"System Requirements","title":"Diagnostics for OHDSI Cohorts","text":"Requires R. packages used CohortDiagnostics require Java.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Diagnostics for OHDSI Cohorts","text":"See instructions configuring R environment, including Java. R, use following commands download install CohortDiagnostics:","code":"remotes::install_github(\"OHDSI/CohortDiagnostics\")"},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"user-documentation","dir":"","previous_headings":"","what":"User Documentation","title":"Diagnostics for OHDSI Cohorts","text":"Documentation can found package website. PDF versions documentation also available: Package manual: CohortDiagnostics manual Vignette: Cohort Diagnostics Vignette: Running Cohort Diagnostics Vignette: Viewing Results Using Diagnostics Explorer","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"Diagnostics for OHDSI Cohorts","text":"Developer questions/comments/feedback: OHDSI Forum use GitHub issue tracker bugs/issues/enhancements","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Diagnostics for OHDSI Cohorts","text":"Read can contribute package.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Diagnostics for OHDSI Cohorts","text":"CohortDiagnostics licensed Apache License 2.0","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Diagnostics for OHDSI Cohorts","text":"CohortDiagnostics developed R Studio.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/index.html","id":"development-status","dir":"","previous_headings":"","what":"Development status","title":"Diagnostics for OHDSI Cohorts","text":"Stable","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/CohortDiagnostics-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CohortDiagnostics: Diagnostics for OHDSI Cohorts — CohortDiagnostics-package","title":"CohortDiagnostics: Diagnostics for OHDSI Cohorts — CohortDiagnostics-package","text":"CohortDiagnostics R utility package development evaluation phenotype algorithms OMOP CDM compliant data sets. package provides standard, end end, set analytics understanding patient capture including data generation result exploration R Shiny interface. Analytics computed include cohort characteristics, record counts, index event misclassification, captured observation windows basic incidence proportions age, gender calendar year. identification errors, CohortDiagnostics enables comparison multiple candidate cohort definitions across one data sources, facilitating reproducible research.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/CohortDiagnostics-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CohortDiagnostics: Diagnostics for OHDSI Cohorts — CohortDiagnostics-package","text":"Maintainer: Jamie Gilbert gilbert@ohdsi.org Authors: Gowtham Rao Martijn Schuemie Patrick Ryan James Weaver contributors: Observational Health Data Science Informatics [copyright holder]","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/checkInputFileEncoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Check character encoding of input file — checkInputFileEncoding","title":"Check character encoding of input file — checkInputFileEncoding","text":"input files, CohortDiagnostics accepts UTF-8 ASCII character encoding. function can used check whether file meets criteria.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/checkInputFileEncoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check character encoding of input file — checkInputFileEncoding","text":"","code":"checkInputFileEncoding(fileName)"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/checkInputFileEncoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check character encoding of input file — checkInputFileEncoding","text":"fileName path file check","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/checkInputFileEncoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check character encoding of input file — checkInputFileEncoding","text":"Throws error input file correct encoding.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/createDiagnosticsExplorerZip.html","id":null,"dir":"Reference","previous_headings":"","what":"Create publishable shiny zip — createDiagnosticsExplorerZip","title":"Create publishable shiny zip — createDiagnosticsExplorerZip","text":"utility designed creating published zip shiny app sqlite database. Designed sharing projects servers like data.ohdsi.org. Takes shiny code R project adds sqlite file zip archive. Uncompressed cohort diagnostics sqlite databases can become large quickly.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/createDiagnosticsExplorerZip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create publishable shiny zip — createDiagnosticsExplorerZip","text":"","code":"createDiagnosticsExplorerZip(   outputZipfile = file.path(getwd(), \"DiagnosticsExplorer.zip\"),   sqliteDbPath = \"MergedCohortDiagnosticsData.sqlite\",   shinyDirectory = system.file(file.path(\"shiny\", \"DiagnosticsExplorer\"), package =     \"CohortDiagnostics\"),   overwrite = FALSE )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/createDiagnosticsExplorerZip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create publishable shiny zip — createDiagnosticsExplorerZip","text":"outputZipfile output path zip file sqliteDbPath Merged Cohort Diagnostics sqlitedb created createMergedResultsFile shinyDirectory (optional) Path location shiny code stored. default, package root overwrite zip file already exists, overwrite ?","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/createMergedResultsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Shiny diagnostics files into sqlite database — createMergedResultsFile","title":"Merge Shiny diagnostics files into sqlite database — createMergedResultsFile","text":"function combines diagnostics results one databases single file. result sqlite database can used input Diagnostics Explorer Shiny app. also checks whether results conform results data model specifications.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/createMergedResultsFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Shiny diagnostics files into sqlite database — createMergedResultsFile","text":"","code":"createMergedResultsFile(   dataFolder,   sqliteDbPath = \"MergedCohortDiagnosticsData.sqlite\",   overwrite = FALSE,   tablePrefix = \"\" )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/createMergedResultsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Shiny diagnostics files into sqlite database — createMergedResultsFile","text":"dataFolder folder exported zip files diagnostics stored. Use executeDiagnostics function generate zip files. Zip files containing results multiple databases may placed folder. sqliteDbPath Output path sqlite database placed overwrite (Optional) overwrite existing sqlite lite db exists. tablePrefix (Optional) string insert table names (e.g. \"cd_\") database table names","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/createResultsDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the results data model tables on a database server. — createResultsDataModel","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"Create results data model tables database server.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/createResultsDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"","code":"createResultsDataModel(   connectionDetails = NULL,   databaseSchema,   tablePrefix = \"\" )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/createResultsDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"connectionDetails DatabaseConnector connectionDetails instance @seealso[DatabaseConnector::createConnectionDetails] databaseSchema schema postgres server tables created. tablePrefix (Optional)  string insert table names (e.g. \"cd_\") database table names","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/createResultsDataModel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"PostgreSQL servers supported.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/deployPositConnectApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Rsconnect deploy — deployPositConnectApp","title":"Rsconnect deploy — deployPositConnectApp","text":"Deploy application posit connect platform shinyapps.io server","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/deployPositConnectApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rsconnect deploy — deployPositConnectApp","text":"","code":"deployPositConnectApp(   appName,   appDir = tempfile(),   sqliteDbPath = \"MergedCohortDiagnosticsData.sqlite\",   shinyDirectory = system.file(file.path(\"shiny\", \"DiagnosticsExplorer\"), package =     \"CohortDiagnostics\"),   connectionDetails = NULL,   shinyConfigPath = NULL,   resultsDatabaseSchema = NULL,   vocabularyDatabaseSchemas = resultsDatabaseSchema,   tablePrefix = \"\",   cohortTableName = \"cohort\",   databaseTableName = \"database\",   port = 80,   useRenvironFile = FALSE,   ... )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/deployPositConnectApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rsconnect deploy — deployPositConnectApp","text":"appName string name call app - unique posit connect server appDir optional - directory use copy files deployment. use consistent dir internal options can change. sqliteDbPath Path merged sqlite file. See createMergedResultsFile create file. shinyDirectory (optional) Directyory shiny app code lives. Use wish modify explorer connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package, specifying connect server CohortDiagnostics results uploaded using uploadResults function. shinyConfigPath Path shiny yml configuration file (use instead sqliteDbPath connectionDetails object) resultsDatabaseSchema schema database server CohortDiagnostics results uploaded. vocabularyDatabaseSchemas (optional) list one schemas database server vocabulary tables located. default value value resultsDatabaseSchema. can provide list vocabulary schema might represent different versions OMOP vocabulary tables. allows us compare impact vocabulary changes Diagnostics. supported sqlite database. tablePrefix (Optional)  string insert table names (e.g. \"cd_\") database table names cohortTableName (Optional) cohort table name differs standard - cohort (ignores prefix set) databaseTableName (Optional) database table name differs standard - database (ignores prefix set) port (optional) used runOverNetwork = TRUE. useRenvironFile logical - recommended, store db credentials .Renviron file ... parameters passed rsconnect::deployApp","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/executeDiagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute cohort diagnostics — executeDiagnostics","title":"Execute cohort diagnostics — executeDiagnostics","text":"Runs cohort diagnostics (subset ) cohorts instantiated using Assumes cohorts already instantiated. CohortGenerator package Characterization: runTemporalCohortCharacterization argument TRUE, following default covariateSettings object created using RFeatureExtraction::createTemporalCovariateSettings Alternatively, covariate setting object may created using example.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/executeDiagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute cohort diagnostics — executeDiagnostics","text":"","code":"executeDiagnostics(   cohortDefinitionSet,   exportFolder,   databaseId,   cohortDatabaseSchema,   databaseName = NULL,   databaseDescription = NULL,   connectionDetails = NULL,   connection = NULL,   cdmDatabaseSchema,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\"),   cohortTable = \"cohort\",   cohortTableNames = CohortGenerator::getCohortTableNames(cohortTable = cohortTable),   vocabularyDatabaseSchema = cdmDatabaseSchema,   cohortIds = NULL,   cdmVersion = 5,   runInclusionStatistics = TRUE,   runIncludedSourceConcepts = TRUE,   runOrphanConcepts = TRUE,   runTimeSeries = FALSE,   runVisitContext = TRUE,   runBreakdownIndexEvents = TRUE,   runIncidenceRate = TRUE,   runCohortRelationship = TRUE,   runTemporalCohortCharacterization = TRUE,   temporalCovariateSettings = getDefaultCovariateSettings(),   minCellCount = 5,   minCharacterizationMean = 0.01,   irWashoutPeriod = 0,   incremental = FALSE,   incrementalFolder = file.path(exportFolder, \"incremental\"),   runFeatureExtractionOnSample = FALSE,   sampleN = 1000,   seed = 64374,   seedArgs = NULL )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/executeDiagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute cohort diagnostics — executeDiagnostics","text":"cohortDefinitionSet Data.frame cohorts must include columns cohortId, cohortName, json, sql exportFolder folder output exported . folder exist created. databaseId short string identifying database (e.g. 'Synpuf'). cohortDatabaseSchema Schema name cohort table resides. Note SQL Server, include database schema name, example 'scratch.dbo'. databaseName full name database. NULL, defaults value cdm_source table databaseDescription short description (several sentences) database. NULL, defaults value cdm_source table connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cdmDatabaseSchema Schema name patient-level data OMOP CDM format resides. Note SQL Server, include database schema name, example 'cdm_data.dbo'. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. cohortTable Name cohort table. cohortTableNames Cohort Table names used CohortGenerator package vocabularyDatabaseSchema Schema name OMOP vocabulary data resides. commonly cdmDatabaseSchema. Note SQL Server, include database schema name, example 'vocabulary.dbo'. cohortIds Optionally, provide subset cohort IDs restrict diagnostics . cdmVersion version OMOP CDM. Default 5. (Note: 5 supported.) runInclusionStatistics Generate export statistic cohort inclusion rules? runIncludedSourceConcepts Generate export source concepts included cohorts? runOrphanConcepts Generate export potential orphan concepts? runTimeSeries Generate export time series diagnostics? runVisitContext Generate export index-date visit context? runBreakdownIndexEvents Generate export breakdown index events? runIncidenceRate Generate export cohort incidence  rates? runCohortRelationship Generate export cohort relationship? Cohort relationship checks temporal relationship two cohorts. runTemporalCohortCharacterization Generate export temporal cohort characterization? records values greater 0.001 returned. temporalCovariateSettings Either object type covariateSettings created using one createTemporalCovariateSettings function FeatureExtraction package, list objects. minCellCount minimum cell count fields contains person counts fractions. minCharacterizationMean minimum mean value characterization output. Values cut output. help reduce file size characterization output, remove information covariates low values. default 0.001 (.e. 0.1 percent) irWashoutPeriod Number days washout include calculation incidence rates - default 0 incremental Create cohort diagnostics created ? incrementalFolder incremental = TRUE, specify folder records kept cohort diagnostics executed. runFeatureExtractionOnSample Logical. TRUE, function operate sample data. Default FALSE, meaning function operate full data set. sampleN Integer. number records include sample runFeatureExtractionOnSample TRUE. Default 1000. Ignored runFeatureExtractionOnSample FALSE. seed Integer. seed random number generator used create sample. ensures sample can drawn future runs. Default 64374. seedArgs List. Additional arguments pass sampling function. can used control aspects sampling process beyond seed sample size.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/executeDiagnostics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute cohort diagnostics — executeDiagnostics","text":"cohortSetReference argument must data frame least following columns.fields exported cohort table part Cohort Diagnostics results data model. additional fields found stored JSON object metadata field cohort table: cohortId cohort Id id used identify  cohort definition. required unique. used create file names. cohortName full name cohort. shown Shiny app. json JSON cohort definition cohort. sql SQL cohort definition rendered cohort json.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/executeDiagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute cohort diagnostics — executeDiagnostics","text":"","code":"if (FALSE) { # \\dontrun{ # Load cohorts (assumes that they have already been instantiated) cohortTableNames <- CohortGenerator::getCohortTableNames(cohortTable = \"cohort\") cohorts <- CohortGenerator::getCohortDefinitionSet(packageName = \"MyGreatPackage\") connectionDetails <- createConnectionDetails(   dbms = \"postgresql\",   server = \"ohdsi.com\",   port = 5432,   user = \"me\",   password = \"secure\" )  executeDiagnostics(   cohorts = cohorts,   exportFolder = \"export\",   cohortTableNames = cohortTableNames,   cohortDatabaseSchema = \"results\",   cdmDatabaseSchema = \"cdm\",   databaseId = \"mySpecialCdm\",   connectionDetails = connectionDetails )  # Use a custom set of cohorts defined in a data.frame cohorts <- data.frame(   cohortId = c(100),   cohortName = c(\"Cohort Name\"),   logicDescription = c(\"My Cohort\"),   sql = c(readLines(\"path_to.sql\")),   json = c(readLines(\"path_to.json\")) ) executeDiagnostics(   cohorts = cohorts,   exportFolder = \"export\",   cohortTable = \"cohort\",   cohortDatabaseSchema = \"results\",   cdmDatabaseSchema = \"cdm\",   databaseId = \"mySpecialCdm\",   connectionDetails = connectionDetails ) } # }"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getCdmDataSourceInformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns information from CDM source table. — getCdmDataSourceInformation","title":"Returns information from CDM source table. — getCdmDataSourceInformation","text":"Returns CDM source name, description, release date, CDM release date, version vocabulary version, available.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getCdmDataSourceInformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns information from CDM source table. — getCdmDataSourceInformation","text":"","code":"getCdmDataSourceInformation(   connectionDetails = NULL,   connection = NULL,   cdmDatabaseSchema )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getCdmDataSourceInformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns information from CDM source table. — getCdmDataSourceInformation","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cdmDatabaseSchema Schema name patient-level data OMOP CDM format resides. Note SQL Server, include database schema name, example 'cdm_data.dbo'.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getCdmDataSourceInformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns information from CDM source table. — getCdmDataSourceInformation","text":"Returns data frame CDM Data source.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getCohortCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the cohort(s) — getCohortCounts","title":"Count the cohort(s) — getCohortCounts","text":"Computes subject entry count per cohort","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getCohortCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the cohort(s) — getCohortCounts","text":"","code":"getCohortCounts(   connectionDetails = NULL,   connection = NULL,   cohortDatabaseSchema,   cohortTable = \"cohort\",   cohortIds = c() )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getCohortCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the cohort(s) — getCohortCounts","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cohortDatabaseSchema Schema name cohort table resides. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortTable Name cohort table. cohortIds cohort Id(s) used reference cohort cohort table. left empty, cohorts table included.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getCohortCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the cohort(s) — getCohortCounts","text":"tibble cohort counts","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getDataMigrator.html","id":null,"dir":"Reference","previous_headings":"","what":"Get database migrations instance — getDataMigrator","title":"Get database migrations instance — getDataMigrator","text":"Returns ResultModelManager DataMigrationsManager instance.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getDataMigrator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get database migrations instance — getDataMigrator","text":"","code":"getDataMigrator(connectionDetails, databaseSchema, tablePrefix = \"\")"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getDataMigrator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get database migrations instance — getDataMigrator","text":"connectionDetails DatabaseConnector connection details object databaseSchema String schema database schema lives tablePrefix (Optional) Use table prefix used table names (e.g. \"cd_\")","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getDataMigrator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get database migrations instance — getDataMigrator","text":"Instance ResultModelManager::DataMigrationManager interface converting existing data models","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getDefaultCovariateSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default covariate settings — getDefaultCovariateSettings","title":"Get default covariate settings — getDefaultCovariateSettings","text":"Default covariate settings cohort diagnostics execution","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getDefaultCovariateSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default covariate settings — getDefaultCovariateSettings","text":"","code":"getDefaultCovariateSettings()"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getDefaultVocabularyTableNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of vocabulary table names — getDefaultVocabularyTableNames","title":"Get a list of vocabulary table names — getDefaultVocabularyTableNames","text":"Get list vocabulary table names","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getDefaultVocabularyTableNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of vocabulary table names — getDefaultVocabularyTableNames","text":"","code":"getDefaultVocabularyTableNames()"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getDefaultVocabularyTableNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of vocabulary table names — getDefaultVocabularyTableNames","text":"Get list vocabulary table names results data model","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getResultsDataModelSpecifications.html","id":null,"dir":"Reference","previous_headings":"","what":"Get specifications for Cohort Diagnostics results data model — getResultsDataModelSpecifications","title":"Get specifications for Cohort Diagnostics results data model — getResultsDataModelSpecifications","text":"Get specifications Cohort Diagnostics results data model","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getResultsDataModelSpecifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get specifications for Cohort Diagnostics results data model — getResultsDataModelSpecifications","text":"","code":"getResultsDataModelSpecifications()"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/getResultsDataModelSpecifications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get specifications for Cohort Diagnostics results data model — getResultsDataModelSpecifications","text":"tibble data frame object specifications","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/launchDiagnosticsExplorer.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the Diagnostics Explorer Shiny app — launchDiagnosticsExplorer","title":"Launch the Diagnostics Explorer Shiny app — launchDiagnosticsExplorer","text":"Launch Diagnostics Explorer Shiny app","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/launchDiagnosticsExplorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the Diagnostics Explorer Shiny app — launchDiagnosticsExplorer","text":"","code":"launchDiagnosticsExplorer(   sqliteDbPath = \"MergedCohortDiagnosticsData.sqlite\",   connectionDetails = NULL,   shinyConfigPath = NULL,   resultsDatabaseSchema = NULL,   vocabularyDatabaseSchema = NULL,   vocabularyDatabaseSchemas = resultsDatabaseSchema,   tablePrefix = \"\",   cohortTableName = \"cohort\",   databaseTableName = \"database\",   aboutText = NULL,   runOverNetwork = FALSE,   port = 80,   makePublishable = FALSE,   publishDir = file.path(getwd(), \"DiagnosticsExplorer\"),   overwritePublishDir = FALSE,   launch.browser = FALSE )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/launchDiagnosticsExplorer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the Diagnostics Explorer Shiny app — launchDiagnosticsExplorer","text":"sqliteDbPath Path merged sqlite file. See createMergedResultsFile create file. connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package, specifying connect server CohortDiagnostics results uploaded using uploadResults function. shinyConfigPath Path shiny yml configuration file (use instead sqliteDbPath connectionDetails object) resultsDatabaseSchema schema database server CohortDiagnostics results uploaded. vocabularyDatabaseSchema (Deprecated) Please use vocabularyDatabaseSchemas. vocabularyDatabaseSchemas (optional) list one schemas database server vocabulary tables located. default value value resultsDatabaseSchema. can provide list vocabulary schema might represent different versions OMOP vocabulary tables. allows us compare impact vocabulary changes Diagnostics. supported sqlite database. tablePrefix (Optional)  string insert table names (e.g. \"cd_\") database table names cohortTableName (Optional) cohort table name differs standard - cohort (ignores prefix set) databaseTableName (Optional) database table name differs standard - database (ignores prefix set) aboutText Text (using HTML markup) displayed tab Shiny app. provided, tab shown. runOverNetwork (optional) want app run network? port (optional) used runOverNetwork = TRUE. makePublishable (Optional) copy data files make app publishable posit connect/shinyapp.io publishDir make publishable true - directory shiny app copied overwritePublishDir (Optional) make publishable true - overwrite directory publishing launch.browser app launched default browser, Shiny window. Note: copying clipboard work Shiny window.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/launchDiagnosticsExplorer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch the Diagnostics Explorer Shiny app — launchDiagnosticsExplorer","text":"Launches Shiny app allows user explore diagnostics","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/migrateDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Migrate Data model — migrateDataModel","title":"Migrate Data model — migrateDataModel","text":"Migrate data current state next state strongly advised backup data (either sqlite files, backup database (case using postgres backend) kept csv/zip files data generation.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/migrateDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Migrate Data model — migrateDataModel","text":"","code":"migrateDataModel(connectionDetails, databaseSchema, tablePrefix = \"\")"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/migrateDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Migrate Data model — migrateDataModel","text":"connectionDetails DatabaseConnector connection details object databaseSchema String schema database schema lives tablePrefix (Optional) Use table prefix used table names (e.g. \"cd_\")","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/runCohortRelationshipDiagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a set of cohorts get relationships between the cohorts. — runCohortRelationshipDiagnostics","title":"Given a set of cohorts get relationships between the cohorts. — runCohortRelationshipDiagnostics","text":"Given set cohorts, get temporal relationships cohort_start_date cohorts.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/runCohortRelationshipDiagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a set of cohorts get relationships between the cohorts. — runCohortRelationshipDiagnostics","text":"","code":"runCohortRelationshipDiagnostics(   connectionDetails = NULL,   connection = NULL,   cohortDatabaseSchema = NULL,   tempEmulationSchema = NULL,   cohortTable = \"cohort\",   targetCohortIds,   comparatorCohortIds,   relationshipDays )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/runCohortRelationshipDiagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a set of cohorts get relationships between the cohorts. — runCohortRelationshipDiagnostics","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cohortDatabaseSchema Schema name cohort table resides. Note SQL Server, include database schema name, example 'scratch.dbo'. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. cohortTable Name cohort table. targetCohortIds vector one Cohort Ids use target cohorts. comparatorCohortIds vector one Cohort Ids use feature/comparator cohorts. relationshipDays dataframe two columns startDay endDay representing periods time compute relationship","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/runCohortTimeSeriesDiagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a set of instantiated cohorts get time series for the cohorts. — runCohortTimeSeriesDiagnostics","title":"Given a set of instantiated cohorts get time series for the cohorts. — runCohortTimeSeriesDiagnostics","text":"function first generates calendar period table, calendar intervals timeSeriesMinDate timeSeriesMaxDate. Calendar Month, Quarter year supported. calendar interval, time series data computed. returned object R dataframe need converted time series object perform time series analysis. Data Source time series: computes time series data source level .e. observation period table. output limited individuals cohort table people datasource (.e. present observation period table)","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/runCohortTimeSeriesDiagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a set of instantiated cohorts get time series for the cohorts. — runCohortTimeSeriesDiagnostics","text":"","code":"runCohortTimeSeriesDiagnostics(   connectionDetails = NULL,   connection = NULL,   tempEmulationSchema = NULL,   cdmDatabaseSchema,   cohortDatabaseSchema = cdmDatabaseSchema,   cohortTable = \"cohort\",   runCohortTimeSeries = TRUE,   runDataSourceTimeSeries = FALSE,   timeSeriesMinDate = as.Date(\"1980-01-01\"),   timeSeriesMaxDate = as.Date(Sys.Date()),   stratifyByGender = TRUE,   stratifyByAgeGroup = TRUE,   cohortIds = NULL )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/runCohortTimeSeriesDiagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a set of instantiated cohorts get time series for the cohorts. — runCohortTimeSeriesDiagnostics","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. cdmDatabaseSchema Schema name patient-level data OMOP CDM format resides. Note SQL Server, include database schema name, example 'cdm_data.dbo'. cohortDatabaseSchema Schema name cohort table resides. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortTable Name cohort table. runCohortTimeSeries Generate export cohort level time series? runDataSourceTimeSeries Generate export Data source level time series? .e. using persons found observation period table. timeSeriesMinDate (optional) Minimum date time series. Default value January 1st 1980. timeSeriesMaxDate (optional) Maximum date time series. Default value System date. stratifyByGender want stratify Gender stratifyByAgeGroup want stratify Age group cohortIds vector one Cohort Ids compute time distribution .","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/uploadResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload results to the database server. — uploadResults","title":"Upload results to the database server. — uploadResults","text":"Requires results data model tables created using createResultsDataModel function. Set POSTGRES_PATH environmental variable path folder containing psql executable enable bulk upload (recommended).","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/uploadResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload results to the database server. — uploadResults","text":"","code":"uploadResults(   connectionDetails,   schema,   zipFileName,   forceOverWriteOfSpecifications = FALSE,   purgeSiteDataBeforeUploading = TRUE,   tempFolder = tempdir(),   tablePrefix = \"\",   ... )"},{"path":"https://ohdsi.github.io/CohortDiagnostics/reference/uploadResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload results to the database server. — uploadResults","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. schema schema postgres server tables created. zipFileName name zip file. forceOverWriteOfSpecifications TRUE, specifications phenotypes, cohort definitions, analysis overwritten already exist database. use specifications changed since last upload. purgeSiteDataBeforeUploading TRUE, inserting data specific databaseId data site dropped. assumes input zip file contains full data data site. tempFolder folder local file system zip files extracted . cleaned function finished. Can used specify temp folder drive sufficient space default system temp space limited. tablePrefix (Optional)  string insert table names (e.g. \"cd_\") database table names ... See ResultModelManager::uploadResults","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-331","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.3.1","title":"CohortDiagnostics 3.3.1","text":"Bug fixes: Attempted fix issue DATEDIFF overflowing integer databse platforms","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-330","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.3.0","title":"CohortDiagnostics 3.3.0","text":"Changes: Added function make deployment posit connect servers easier Added ability use CohortGenerator sample functionality executeDiagnostics speeds execution large cohort definitions Requires use FeatureExtraction 3.4.0 support new API Removed annotation tables result schema script","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-325","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.2.5","title":"CohortDiagnostics 3.2.5","text":"Bug Fixes: fixed broken migrations using “ADD COLUMN” Fixed broken links manaual Fixed issue Andromeda calls characterization R 4.3.x Fix Vroom issue mac","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-324","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.2.4","title":"CohortDiagnostics 3.2.4","text":"Bug Fix: Added support newer API OhdsiShinyModules (maintaining support old version) Resolved issue incidence rates sometimes exporting null/infinite setting 0 error cases","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-323","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.2.3","title":"CohortDiagnostics 3.2.3","text":"Resolved issue concept sets exported diagnostics executed. concept sets now always exported results csv imported databases","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-322","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.2.2","title":"CohortDiagnostics 3.2.2","text":"Fixes unit tests breaking R 4.3 due change Sys.time function","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-321","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.2.1","title":"CohortDiagnostics 3.2.1","text":"Added requirement Andromeda 0.6.0 (implicitly required DatabaseConnector) Fixed issue saving cohort subsets csv file viewing analysis shiny app","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-320","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.2.0","title":"CohortDiagnostics 3.2.0","text":"run orphan concepts checks subset cohorts Remove use lookback period IR calculations - now setting call package Added data migration support subsets database schema (allow future functionality take care ) Added functionality launchDiagnosticsExplorer make publishing poist connect/shinyapps.io straightforward (still requires removal ggiraph) Moved shiny code OHDSI/OhdsiShinyModules","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-312","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.1.2","title":"CohortDiagnostics 3.1.2","text":"Bug Fixes: Removed package dependency snapshot capture breaking newer versions R","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-311","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.1.1","title":"CohortDiagnostics 3.1.1","text":"Changes: Removed CohortExplorer app ’s now part new package. Added support custom FeatureExtraction features Bug Fixes: Fixed error checking cdm_source table Removal .data$ usage across package fix tidyselect warning","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-310","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.1.0","title":"CohortDiagnostics 3.1.0","text":"Changes: Major refactoring shiny app use modular code ease maintenance tests shiny modules inst/shiny/DiagnosticsExplorer/tests Added support table prefixes Diagnostics Explorer databases (e.g. cg_cohort_definition) Enabled annotation local instances DiagnosticsExplorer Added yaml configuration diagnostics explorer app, including docs usage Storage version number database results file allow future migrations Slight optimization cohort characterization queries diagnostics explorer Support database migrations adding migrateDataModel functionality. Versions data generated CohortDiagnostics 3.0.0 intended future compatible. .e. sqlite results file postgres database generated version 3.0.0 cohort diagnostics new shiny app functionality supported run migrateDataModel . Changed type dataType fieldName columnName align strategus modules Refactored export characterization results use common export Ensure tests cases always use continuous covariate Batch operations executing cohort relationship, time series, feature extraction based diagnostics. New parameter minCharacterizationMean. introduces cut output FeatureExtraction. absence parameter output atleast one row every covariateId datasource - low count useful diagnostics. Bug fixes: Fixed issue uploading results postgres db caused null values primary key field. Removed constraint fix issue. Fix index_event_breakdown duplicate entries concept observed domain multiple times Many issues resolved shiny codebase","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-303","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.0.3","title":"CohortDiagnostics 3.0.3","text":"Changes: Changed default batch size characterization feature extraction 100 5 causing performance issues redshift clusters. Allow setting batch size feature extraction options(\"CohortDiagnostics-FE-batch-size\" = batchSize)","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-302","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.0.2","title":"CohortDiagnostics 3.0.2","text":"Bug fixes: Fixed issue writing csvs caused update SqlRender camelCaseToSnakeCase function check caused execution crash parameters null. Fixed issue observation period overflowing sql integer BigQuery causing execution crash","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-301","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.0.1","title":"CohortDiagnostics 3.0.1","text":"Bug fixes: Updated old/incorrect documentation package usage Fixed bug new versions CohortGenerator v0.5.0 causing cohort definition sets package load Fixed bug shiny app multiple runs database cause app crash selecting database","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-300","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 3.0.0","title":"CohortDiagnostics 3.0.0","text":"Changes: Time series diagnostics removed Removed runCohortDiagnostics function - now completely replaced executeDiagnostics Removed loadCohortsFromPackage function now replaced CohortGenerator::getCohortDefinitionSet Removed instantiate cohort functionality, instantiateCohortSet now used CohortGenerator package Removed optional inclusionStatisticsFolder parameter, now exported directly CohortGenerator without need generate first. Removed usage Rdata files DiagnosticsExplorer shiny app function create preMergeDiagnosticsFiles Added function createMergedResultsFile outputs shiny app Added support SqlRender/DatabaseConnector compatible database (note, experimental. Postgres sqlite backends recommended use production environments) Improved metadata collection storage runs cohort diagnostics. Removed phenotype_id field data ddl Additional checks output cohort diagnostics ensure conforms results data model. new function (internal) makeDataExportable. Results data model csv file enhanced new fields, including field specify value subjected privacy protection (.e. min cell count, eg. person count). Note bug discovered orphan concepts included source concepts leading duplication row records primary key. bug fixed calculating max value grouped primary keys. fixed another commit. New optional diagnostics computes temporal relationship two cohorts. settings temporal relationship cohorts defaults temporalCovariateSettings. diagnostics integrated characterization output diagnostics explorer, cohorts covariates. New optional diagnostics called time series diagnostics. Time series diagnostics takes input calendar period range, calendar period range calendar units (year, quarter, month) computes approximate new occurrence (approximates incidence) observations (approximates prevalence) cohort start cohort end dates calendar period. Bug fixes: Added support users include non-standard columns CDM preventing crashes","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-224","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 2.2.4","title":"CohortDiagnostics 2.2.4","text":"Bug fixes: Fixed bug causing generation premerged upload files fail output fields results data model.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-223","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 2.2.3","title":"CohortDiagnostics 2.2.3","text":"Bug fixes: Replace use dplyr across() bug introduced tidyr v1.2.0","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-222","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 2.2.2","title":"CohortDiagnostics 2.2.2","text":"Bug fixes: Fixed syntax error causing empty description field inclusion rule stats","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-221","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 2.2.1","title":"CohortDiagnostics 2.2.1","text":"Bug fixes: Added new lines NEWS.md fix package site. Updated vignette fix minor issues Cohorts zero counts now stored results display shiny app","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-220","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 2.2.0","title":"CohortDiagnostics 2.2.0","text":"Changes: 1. Added executeDiagnostics function aims replace runCohortDiagnosticsas main interface package. Updated vignette “Running Cohort Diagnostics” give clearer instructions Removed vignettes usage longer required Improved testing across database platforms Moved particularly useful warnings logInfo Bug Fixes: 1. User code removed CohortExplorer fix issue #618 Fixed bug runBreakdownIndexEvents = TRUE failed drug_era table SQL error - Issue #695 Fixed error computing incidence rates BigQuery. Fixed error cdm_source table empty (warning remains). Fixed error instantiating cohorts BigQuery.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-214","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 2.1.4","title":"CohortDiagnostics 2.1.4","text":"Changes: Minor cosmetic changes diagnostics explorer shiny app. Typo fix Fix warning type-convert https://github.com/OHDSI/CohortDiagnostics/issues/661 Use Sex instead Gender Diagnostics Explorer https://github.com/OHDSI/CohortDiagnostics/issues/676 Bug Fixes: Privacy protecting feature bug fix. prior version covariate_value covariate_value_dist failed privacy protection. Thank @msuchard reporting issue @schuemie fixing https://github.com/OHDSI/CohortDiagnostics/issues/658","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-213","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 2.1.3","title":"CohortDiagnostics 2.1.3","text":"Changes: starting diagnostics explorer using launchDiagnosticsExplorer - checks added remotes CirceR https://github.com/OHDSI/CohortDiagnostics/issues/595 Bug Fixes: Diagnostics explorer - characterization plot show warning message one cohorts selected data. Added check issue.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-212","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 2.1.2","title":"CohortDiagnostics 2.1.2","text":"Bug fixes: DiagnosticsExplorer fixes bug app failure runIndexEventBreakdown, runOrphanConcepts, includedSourceConcept set FALSE","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-211","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 2.1.1","title":"CohortDiagnostics 2.1.1","text":"Bug fixes: DiagnosticsExplorer shiny app bug fixes: inclusion rule display. Handle situation cdm_source may one row record. warning + use max value vocabularyVersion. Switch runTimeSeries BigQuery SQL translation issue, addressed version 2.3. https://github.com/OHDSI/CohortDiagnostics/issues/503 Also runTimeSeries set FALSE default. Fixed bug DDL - temporal_covariate_value_dist https://github.com/OHDSI/CohortDiagnostics/issues/490 See issue https://github.com/OHDSI/CohortDiagnostics/issues/497","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-210","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 2.1.0","title":"CohortDiagnostics 2.1.0","text":"Changes: Diagnostics explorer Shiny app enhancements: Improved tool tip Various improvements plots consistent color, axis labels labels Visit context table addition Diagnostic explorer now distinct shiny application phenotype library. PhenotypeExplorer stand alone shiny app package PhenotypeLibrarian. Lot UX changes. Reactivity deferred drop menus. Changes improve app stability. Index event breakdown now subject count Index event breakdown calculates _source_concept_id source fields CDM tables. Vocabulary database schema now supported. Metadata (vocabulary version information data source) now collected. OracleTempSchema use deprecated favor tempEmulationSchema. Run external concept count removed, concept counts data available. Function ‘runCohortDiagnosticsUsingExternalCounts’ removed. Removed code related referentConceptId = phenotypeId/1000 always hold true. Create cohort table function now private. Please use instantiate cohort. checkInputFileEncoding exported public function (scope CohortDiagnostics). Updated results data model include new tables (resolved_concepts). Cohort Diagnostics results data model now compliant standard characterization output. Support cohort_censor_stats table webapi 2.8.1 #387 Add time series diagnostics computation. Output Diagnostics explorer version. improvements help usability stability. Informative messages help debugbing needed. phenotypeDescription longer supported input cohort diagnostics. Bug fixes: databaseName databaseDescription non NULL Fixed computation standard deviation standard difference mean binary covariates.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-200","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 2.0.0","title":"CohortDiagnostics 2.0.0","text":"Changes: Many improvements performance computing diagnostics. Now allows computation diagnostics many (>100) cohorts . Diagnostics Explorer Shiny app can now also run results data database. Added functions uploading diagnostics data database. becomes necessary dealing large data (e.g. 100 cohort definitions). Added ability group cohort definitions phenotypes, add descriptions phenotypes. Currently consequence grouping phenotype cohort overlap computed within phenotype. Grouping phenotypes done adding phenotypeId field cohortsToCreate file, adding phenotypeDescription file. See examplePhenotypeLibraryPackage repo example. cohort overlap plot now uses stacked bar charts instead Venn diagram allow showing multiple comparisons across multiple databases . cohort characteristics comparison plot now colors domain, allows filtering domain. Switching ‘plotly’ ‘ggiraph’ interactive plotting. Added Visit Context diagnostic. Bug fixes: Fixing numerous bugs introduced v1.2.x.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-126","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 1.2.6","title":"CohortDiagnostics 1.2.6","text":"Bug fixes: Additional bug fixes characterization/temporal characterization.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-125","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 1.2.5","title":"CohortDiagnostics 1.2.5","text":"Bug fixes: Additional bug fixes characterization/temporal characterization.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-124","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 1.2.4","title":"CohortDiagnostics 1.2.4","text":"Bug fixes: Added details log characterization/temporal characterization return results returns result threshold value. default filter results Characterization Temporal Characterization value less 0.001. leading empty results cohorts - causing errors.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-123","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 1.2.3","title":"CohortDiagnostics 1.2.3","text":"Bug fixes: Fixed error many concept sets instantiated. Removed ohdsi/SqlRender Remotes https://github.com/OHDSI/CohortDiagnostics/issues/189 Fixed Digit precision RJSONIO::toJson fromJSON https://github.com/OHDSI/CohortDiagnostics/issues/161 important fix. digit precision explicitly specified RJSONIO, scientific notation used. issue seems happen integer id (conceptId, conceptSetId, cohortId etc) >= 10,000,000 (rare). Please use update id’s > 10,000,000.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-122","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 1.2.2","title":"CohortDiagnostics 1.2.2","text":"New features: 1. Minor UI changes Diagnostics explorer. Added missing sort. Added better labels plots. Download plots. Bug fixes: 1. Changes dependency ROhdsiWebApi (>= 1.1.0) DiagnosticsExplorer display bug fixes","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-121","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 1.2.1","title":"CohortDiagnostics 1.2.1","text":"New features: 1. objects DiagnosticsExplorer sorted default #173 Multi select concepts #199 Bug fixes: 1. Ensure concept sets across cohort definitions unique #174 (changes dependency ROhdsiWebApi (>= 1.1.0))","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-120","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 1.2.0","title":"CohortDiagnostics 1.2.0","text":"Changes: 1. New function retrieve concept set json cohort json New function retrieve concept set sql cohort sql DiagnosticsExplorer shiny app - DataTable now rendered using server side processing. Bug fixes UI improvements. DiagnosticsExplorer shiny app - Phenotype library mode (released) DiagnosticsExplorer shiny app - Combine included source concepts orphan concepts one submenu https://github.com/OHDSI/CohortDiagnostics/issues/129 Bug fixes: 1. https://github.com/OHDSI/CohortDiagnostics/issues/167 https://github.com/OHDSI/CohortDiagnostics/issues/165","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-111","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 1.1.1","title":"CohortDiagnostics 1.1.1","text":"Changes: 1. Shiny app UI improvements Link Atlas Athena cohortId. Supports baseUrl. (beta - unreleased) support Phenotype library. Shiny app look two additional csv files phenotypeDescription cohortDescription put DiagnosticExplorer Phenotype Library Mode. Plan release future version >= 1.2 Changed default selections temporal characterization Added minimum threshold value covariate_value temporal_covariate_value default value = 0 (future release, plan make 0.005 .e. 0.5%) Bug fixes: Minor bug fixes.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-110","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 1.1.0","title":"CohortDiagnostics 1.1.0","text":"Changes: 1. Added temporal characterization UI changes Shiny app diagnostic explorer Bug fixes: 1. Circe-update introduced bug parsing concept sets cohort definition. Handling empty cohorts Changes: Error handling: Use checkmate R-package provide informative error messages. Refactor runCohortDiagnostics: added new function refactoring existing private functions. new function get JSON parameterized OHDSI SQL cohorts diagnostics requested Note: code partially refactored depend tidyverse.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-102","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 1.0.2","title":"CohortDiagnostics 1.0.2","text":"Changes: Adapting new ROhdsiWebApi (>= 1.0.0) interface. Added log info provides addition run time details #72 Bugfixes: Fixing broken getTimeDistributions function. Fixing broken instantiateCohort function.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-100","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 1.0.0","title":"CohortDiagnostics 1.0.0","text":"Changes: Added database information tab Diagnostics Explorer Shiny app. Using Andromeda instead ff store large data objects (used characterization). Bugfixes: Fixed error cohort definition concept sets. Fixed error index event breakdown entry event contained multiple criteria domain. Fixed error related tempEmulationSchema argument (needed Oracle BigQuery). Fixed use deprecated function, causing warnings causing older versions ParallelLogger error.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-012","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 0.1.2","title":"CohortDiagnostics 0.1.2","text":"Changes Adding option run cohort instantiation diagnostics incrementally, running tasks changed since last ru.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-011","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 0.1.1","title":"CohortDiagnostics 0.1.1","text":"Changes Orphan included concepts tables now show concept ID. Bugfixes: Fixed error orphan code SQL (hard-coded database schema). Fixed bug concept counts become big regular INT. Fixed counts standard concepts shown using external concept count table.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-010","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 0.1.0","title":"CohortDiagnostics 0.1.0","text":"Changes Orphan code check now resolves concept sets instead using verbatim concepts. include specificity. Added option use y-axis databases incidence rate plot. Added runCohortDiagnosticsUsingExternalCounts function. Added option use cohort definitions WebAPI instead stored study package. Bugfixes: Fixed bug causing weird false positives orphan codes (caused transforming concept IDs scientific notation). Better handling viewer analyses executed. Now also showing cohorts zero entries. Fixed error 1 cohort.","code":""},{"path":"https://ohdsi.github.io/CohortDiagnostics/news/index.html","id":"cohortdiagnostics-001","dir":"Changelog","previous_headings":"","what":"CohortDiagnostics 0.0.1","title":"CohortDiagnostics 0.0.1","text":"Initial version","code":""}]
