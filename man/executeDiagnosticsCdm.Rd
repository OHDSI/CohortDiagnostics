% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RunDiagnosticsCdm.R
\name{executeDiagnosticsCdm}
\alias{executeDiagnosticsCdm}
\title{executeDiagnosticsCdm}
\usage{
executeDiagnosticsCdm(
  cdm,
  cohortDefinitionSet,
  cohortTable = "cohort",
  exportFolder,
  minCellCount = 5,
  runInclusionStatistics = TRUE,
  runIncludedSourceConcepts = TRUE,
  runOrphanConcepts = TRUE,
  runTimeSeries = TRUE,
  runVisitContext = TRUE,
  runBreakdownIndexEvents = TRUE,
  runIncidenceRate = TRUE,
  runCohortRelationship = TRUE,
  runTemporalCohortCharacterization = TRUE
)
}
\arguments{
\item{cdm}{cdm reference object}

\item{cohortDefinitionSet}{Data.frame of cohorts must include columns cohortId, cohortName, json, sql}

\item{cohortTable}{cohort table name}

\item{exportFolder}{The folder where the output will be exported to. If this folder does not exist it will be created.}

\item{minCellCount}{The minimum cell count for fields contains person counts or fractions.}

\item{runInclusionStatistics}{Generate and export statistic on the cohort inclusion rules?}

\item{runIncludedSourceConcepts}{Generate and export the source concepts included in the cohorts?}

\item{runOrphanConcepts}{Generate and export potential orphan concepts?}

\item{runTimeSeries}{Generate and export the time series diagnostics?}

\item{runVisitContext}{Generate and export index-date visit context?}

\item{runBreakdownIndexEvents}{Generate and export the breakdown of index events?}

\item{runIncidenceRate}{Generate and export the cohort incidence  rates?}

\item{runCohortRelationship}{Generate and export the cohort relationship? Cohort relationship checks the temporal
relationship between two or more cohorts.}

\item{runTemporalCohortCharacterization}{Generate and export the temporal cohort characterization?
Only records with values greater than 0.001 are returned.}
}
\description{
executeDiagnosticsCdm
}
\examples{
\dontrun{
cdmDatabaseSchema <- "main"
cohortDatabaseSchema <- "main"
cohortTable <- "mycohort"
databaseId <- "Eunomia"
con <- DBI::dbConnect(duckdb::duckdb(), dbdir = CDMConnector::eunomia_dir())
cdm <- cdmFromCon(con, cdmSchema = cdmDatabaseSchema, writeSchema = cohortDatabaseSchema, cdmName = databaseId)
cohortDefinitionSet <- CDMConnector::readCohortSet(system.file("cohorts", package = "CohortDiagnostics"))
cdm <- generateCohortSet(cdm, cohortDefinitionSet, name = cohortTable)
executeDiagnosticsCdm(cdm = cdm,
 cohortDefinitionSet = cohortDefinitionSet,
 cohortTable = cohortTable,
 exportFolder = exportFolder,
 minCellCount = minCellCount,
 runInclusionStatistics = T,
 runIncludedSourceConcepts = T,
 runOrphanConcepts = T,
 runTimeSeries = T,
 runVisitContext = T,
 runBreakdownIndexEvents = T,
 runIncidenceRate = T,
 runCohortRelationship = T,
 runTemporalCohortCharacterization = T)
}

}
