% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runInclusionStatistics.R
\name{runInclusionStatistics}
\alias{runInclusionStatistics}
\title{Runs inclusion statistics on given cohort definitions and exports these.}
\usage{
runInclusionStatistics(
  connection,
  exportFolder,
  databaseId,
  cohortDefinitionSet,
  cohortDatabaseSchema,
  cohortTableNames,
  minCellCount,
  incremental,
  incrementalFolder = exportFolder
)
}
\arguments{
\item{connection}{An object of type \code{connection} as created using the
\code{\link[DatabaseConnector]{connect}} function in the
DatabaseConnector package.}

\item{exportFolder}{The folder where the results will be exported to}

\item{databaseId}{A short string for identifying the database (e.g. 'Synpuf').}

\item{cohortDefinitionSet}{A data.frame with cohort definitions created by 
`CohortGenerator::getCohortDefinitionSet` that must include 
the columns cohortId, cohortName, json, sql.}

\item{cohortDatabaseSchema}{Schema name where your user has write access (has CRUD privileges). This is the location,
of the cohort tables. This is also the location for the optional table such as 
the unique_concept_id table. 
In incremental mode: It is assumed that the tables in this location have not been modified 
outside this application, and the content was written by this application for current 
project only. A good practice would be to ensure that the database table names are unique 
for the project. e.g. 'EPI101_COHORT', 'EPI101_UNIQUE_CONCEPT_ID' (please try to keep 
length < 22). Another assumption: the content of these tables were written by this application
(i.e. they were not altered outside of this application) and the tables are available during the
life cycle of this project. The local files that are created by the application during incremental
mode such as the 'recordKeepingFile'.}

\item{cohortTableNames}{Cohort Table names used by CohortGenerator package.}

\item{minCellCount}{The minimum cell count for fields contains person counts or fractions}

\item{incremental}{`TRUE` or `FALSE` (default). If TRUE diagnostics for cohorts in the 
cohort definition set that have not changed will be skipped and existing results 
csv files will be updated. If FALSE then diagnostics for all cohorts in the cohort 
definition set will be executed and pre-existing results files will be deleted.}

\item{incrementalFolder}{If \code{incremental = TRUE}, specify a folder where records are kept
of which cohort diagnostics has been executed.}
}
\value{
None, it will write csv files to disk.
}
\description{
This function takes a cohortDefinitionSet that inclusions the JSON
representation of each cohort. If there are inclusion rules in the JSON, it will write these 
to the cohort inclusion table. Next, cohort (inclusion) statistics are requested
from the database and written to csv files on disk. 
These are the files written to disk, if available:
 * cohort_inc_result.csv
 * cohort_inc_stats.csv
 * cohort_inclusion.csv
 * cohort_summary_stats.csv
}
