% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runTimeSeries.R
\name{runTimeSeries}
\alias{runTimeSeries}
\title{Given a set of instantiated cohorts get time series for the cohorts.}
\usage{
runTimeSeries(
  connection,
  tempEmulationSchema,
  cdmDatabaseSchema,
  cohortDatabaseSchema,
  cohortTable,
  cohortDefinitionSet,
  runCohortTimeSeries = TRUE,
  runDataSourceTimeSeries = FALSE,
  databaseId,
  exportFolder,
  minCellCount,
  instantiatedCohorts,
  incremental,
  recordKeepingFile,
  observationPeriodDateRange,
  batchSize = getOption("CohortDiagnostics-TimeSeries-batch-size", default = 20)
)
}
\arguments{
\item{connection}{An object of type \code{connection} as created using the
\code{\link[DatabaseConnector]{connect}} function in the
DatabaseConnector package.}

\item{tempEmulationSchema}{Some database platforms like Oracle and Impala do not truly support temp tables. To emulate temp 
tables, provide a schema with write privileges where temp tables can be created.}

\item{cdmDatabaseSchema}{Schema name where your patient-level data in OMOP CDM format resides.
Note that for SQL Server, this should include both the database and
schema name, for example 'cdm_data.dbo'.}

\item{cohortDatabaseSchema}{Schema name where your cohort table resides. Note that for SQL Server,
this should include both the database and schema name, for example
'scratch.dbo'.}

\item{cohortTable}{Name of the cohort table.}

\item{cohortDefinitionSet}{A data.frame with cohort definitions created by 
`CohortGenerator::getCohortDefinitionSet` that must include 
the columns cohortId, cohortName, json, sql.}

\item{runDataSourceTimeSeries}{Generate and export the data source level time series using all persons found in observation period table (T3).}

\item{databaseId}{The databaseId to retrieve the results for. This is a 
character field values from the `databaseId` field of the `database` table 
of the results data model.}

\item{exportFolder}{The folder where the results will be exported to}

\item{minCellCount}{The minimum cell count for fields contains person counts or fractions}

\item{instantiatedCohorts}{cohortIds of the cohorts that have been already been instantiated}

\item{incremental}{`TRUE` or `FALSE` (default). If TRUE diagnostics for cohorts in the 
cohort definition set that have not changed will be skipped and existing results 
csv files will be updated. If FALSE then diagnostics for all cohorts in the cohort 
definition set will be executed and pre-existing results files will be deleted.}

\item{observationPeriodDateRange}{}

\item{batchSize}{In case of batch processing, this specifies the size of the batch}

\item{databaseIds}{A vector one or more databaseIds to retrieve the results for. This is a 
character field values from the `databaseId` field of the `database` table 
of the results data model.}

\item{incrementalFolder}{If \code{incremental = TRUE}, specify a folder where records are kept
of which cohort diagnostics has been executed.}

\item{runCohortTimeSeries.}{Generate and export the cohort level time series (T1 and T2)}
}
\value{
None, it will write the results to a csv file
}
\description{
This function first generates a calendar period table, that has
calendar intervals between the \code{timeSeriesMinDate} and \code{timeSeriesMaxDate}.
Calendar Month, Quarter and year are supported.
For each of the calendar interval, time series data are computed. There are 2 different types
of time series: one related to cohorts and one related to the data source.

Cohort time series: computes time series at the cohort level/table. These have 2 definitions: T1 and T2.
T1: subjects in the cohort who have at least one cohort day in a calendar period. 
T2: subjects in the cohort who have at least one observation day in a calendar period.

Data Source time series: computes time series at the data source level i.e. observation
period table. This output is NOT limited to individuals in the cohort table
but is for ALL people in the data source (i.e. present in observation period table)
}
