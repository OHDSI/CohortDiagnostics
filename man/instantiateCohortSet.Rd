% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CohortConstruction.R
\name{instantiateCohortSet}
\alias{instantiateCohortSet}
\title{Instantiate a set of cohort(s)}
\usage{
instantiateCohortSet(
  connectionDetails = NULL,
  connection = NULL,
  cdmDatabaseSchema,
  vocabularyDatabaseSchema = cdmDatabaseSchema,
  tempEmulationSchema = NULL,
  oracleTempSchema = NULL,
  cohortDatabaseSchema = cdmDatabaseSchema,
  cohortTable = "cohort",
  cohortIds = NULL,
  packageName = NULL,
  cohortToCreateFile = "settings/CohortsToCreate.csv",
  baseUrl = NULL,
  cohortSetReference = NULL,
  generateInclusionStats = FALSE,
  inclusionStatisticsFolder = NULL,
  createCohortTable = TRUE,
  incremental = FALSE,
  incrementalFolder = NULL
)
}
\arguments{
\item{connectionDetails}{An object of type \code{connectionDetails} as created using the
\code{\link[DatabaseConnector]{createConnectionDetails}} function in the
DatabaseConnector package. Can be left NULL if \code{connection} is
provided.}

\item{connection}{An object of type \code{connection} as created using the
\code{\link[DatabaseConnector]{connect}} function in the
DatabaseConnector package. Can be left NULL if \code{connectionDetails}
is provided, in which case a new connection will be opened at the start
of the function, and closed when the function finishes.}

\item{cdmDatabaseSchema}{Schema name where your patient-level data in OMOP CDM format resides.
Note that for SQL Server, this should include both the database and
schema name, for example 'cdm_data.dbo'.}

\item{vocabularyDatabaseSchema}{Schema name where your OMOP vocabulary data resides. This is 
commonly the same as cdmDatabaseSchema. Note that for 
SQL Server, this should include both the database and
schema name, for example 'vocabulary.dbo'.}

\item{tempEmulationSchema}{Some database platforms like Oracle and Impala do not truly support temp tables. To emulate temp 
tables, provide a schema with write privileges where temp tables can be created.}

\item{oracleTempSchema}{DEPRECATED by DatabaseConnector: use \code{tempEmulationSchema} instead.}

\item{cohortDatabaseSchema}{Schema name where your cohort table resides. Note that for SQL Server,
this should include both the database and schema name, for example
'scratch.dbo'.}

\item{cohortTable}{Name of the cohort table.}

\item{cohortIds}{Optionally, provide a subset of cohort IDs to restrict the
construction to.}

\item{packageName}{The name of the package containing the cohort definitions. Can be left NULL if 
\code{baseUrl} and \code{cohortSetReference} have been specified.}

\item{cohortToCreateFile}{The location of the cohortToCreate file within the package. Is ignored if 
\code{baseUrl} and \code{cohortSetReference} have been specified (i.e. webapi mode 
takes precedence).}

\item{baseUrl}{The base URL for the WebApi instance, for example:
"http://server.org:80/WebAPI". Can be left NULL if 
\code{packageName} and \code{cohortToCreateFile} have been specified.}

\item{cohortSetReference}{A data frame with four columns, as described in the details. Can be left NULL if 
\code{packageName} and \code{cohortToCreateFile} have been specified.}

\item{generateInclusionStats}{Compute and store inclusion rule statistics?}

\item{inclusionStatisticsFolder}{The folder where the inclusion rule statistics are stored. Can be
left NULL if \code{generateInclusionStats = FALSE}.}

\item{createCohortTable}{Create the cohort table? If \code{incremental = TRUE} and the table
already exists this will be skipped.}

\item{incremental}{Create only cohorts that haven't been created before?}

\item{incrementalFolder}{If \code{incremental = TRUE}, specify a folder where records are kept
of which definition has been executed.}
}
\value{
A data frame with cohort counts
}
\description{
This function instantiates a set of cohort(s) in specified cohort table, using definitions that are fetched from a WebApi interface.
Optionally, the inclusion rule statistics are computed and stored in the \code{inclusionStatisticsFolder}.
}
\details{
Currently two ways of executing this function are supported, either 
(1) [Package Mode] embedded in a study package, e.g. by hydrating a the \code{SkeletonCohortDiagnosticsStudy} package using \code{Hydra::hydrate} or 
     inserting cohort specifications using \code{ROhdsiWebApi::insertCohortDefinitionSetInPackage}, or 
(2) [WebApi Mode] By using a WebApi interface to retrieve the cohort definitions. Note: WebApi mode takes precedence over package mode.

Structure of \code{cohortSetReference} or \code{cohortToCreateFile}
\describe{
\item{cohortId}{(required) The cohort Id in Atlas for the cohort you want to diagnose.}
\item{cohortName}{(optional) The full name of the cohort. This will be shown in the Shiny app. If not provided, the 
 name used in Atlas will be displayed.}
}

In addition - \code{cohortToCreateFile} is able to accept additional optional columns
\describe{
\item{metaData}{(optional) A JSON with metadata of the cohort that you would like to provided. 
Logic description may be a metadata object. Other types of metadata objects may include project code, author, version, key words etc.}
}
 
When using this function in Package Mode: Use the \code{packageName} and \code{cohortToCreateFile} to specify
the name of the study package, and the name of the cohortToCreate file within that package, respectively

When using this function in WebApi Mode: use the \code{baseUrl} and \code{cohortSetReference} to specify how to 
connect to the WebApi, and which cohorts to fetch, respectively.

The \code{cohortSetReference} argument maybe a vector of atlas ids or it maybe a data frame object. 
If \code{cohortSetReference} is a data frame object:
\describe{
\item{cohortId}{(required) The cohort Id in Atlas for the cohort you want to diagnose.}
\item{cohortName}{(optional) The full name of the cohort. This will be shown in the Shiny app. If not provided, the cohort id will be displayed.}
}
}
