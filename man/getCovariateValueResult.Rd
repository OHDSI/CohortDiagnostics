% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ResultsPulls.R
\name{getCovariateValueResult}
\alias{getCovariateValueResult}
\title{Get cohort covariate (including temporal)}
\usage{
getCovariateValueResult(
  connection = NULL,
  connectionDetails = NULL,
  cohortIds,
  databaseIds,
  minProportion = 0.01,
  maxProportion = 1,
  isTemporal = TRUE,
  timeIds = c(1, 2, 3, 4, 5),
  resultsDatabaseSchema = NULL
)
}
\arguments{
\item{connection}{(optional) An object of type \code{connection} as created using the
\code{\link[DatabaseConnector]{connect}} function in the
DatabaseConnector package. Can be left NULL if \code{connectionDetails}
is provided, in which case a new connection will be opened at the start
of the function, and closed when the function finishes.}

\item{connectionDetails}{(optional) An object of type \code{connectionDetails} as created using the
\code{\link[DatabaseConnector]{createConnectionDetails}} function in the
DatabaseConnector package. Can be left NULL if \code{connection} is
provided.}

\item{cohortIds}{A vector of one or more Cohort Ids.}

\item{databaseIds}{A vector one or more databaseIds to retrieve the results for. This is a 
character field values from the `databaseId` field of the `database` table 
of the results data model.}

\item{minProportion}{Do you want to limit the data returned by a lower threshold. Enter a number
between 0.00 to 1.00. Be default the value is 0.01.}

\item{maxProportion}{Do you want to limit the data returned by a upper threshold. Enter a number
between 0.00 to 1.00. Be default the value is 1.}

\item{isTemporal}{(optional) Get temporal covariate values?}

\item{timeIds}{(optional) Will only be used if isTemporal = TRUE. Do you want to limit to certain
'time ids'. By default timeId = c(1,2,3,4,5) are returned. These correspond to
-365 to -31, -30 to -1, 0 to 0, 1 to 30, 31 to 365.
If any of timeId value = 0, all timeIds are returned.
If any of timeId value = -1, will return all timeIds > 5 (for time series analysis)}

\item{resultsDatabaseSchema}{(optional) The databaseSchema where the results data model 
of cohort diagnostics is stored. This is only required when 
\code{connectionDetails} or \code{\link[DatabaseConnector]{connect}} 
is provided.}
}
\value{
The function will return a tibble data frame object.
}
\description{
Get cohort covariate value data from data stored in cohort diagnostics results data
model. The output of this function may be used, together with covariate ref (temporal
covariate ref and time ref if temporal) for cohorts characteristization diagnostics. 
Because of the large volume of covariates, this function allows to filter range of 
covariate_value by providing the minimum and maximum proportion. Its important to note 
that all covariates are expected to output proportions that are between the values 0.0 to 1.0
}
\details{
Note: The output of this function may be used to create plots or tables. This function relies 
on data available in Cohort Diagnostics results data model. The function will use one of the two
methods to connect to the results data model, 1) database mode, and 2) in-memory mode.

Database mode: In this mode, R will look for the results data model in a remote relational dbms. The 
database system should be one of the databases supported by DatabaseConnector package. If 
either \code{connectionDetails} or \code{\link[DatabaseConnector]{connect}} parameters are
populated with an argument during a function call, the connection gets set to database mode. 

In-memory mode: If both \code{connectionDetails} and \code{\link[DatabaseConnector]{connect}} are 
parameters have a NULL argument then query will be in-memory mode. R will now expect and check
for a data frame object available in R's memory, as required for the function. The object should be
an object specificed in Cohort Diagnostics results data model.

Objects in R's memory are expected to follow camelCase naming conventions (see HADES), while objects 
in a relational database system are expected to follow snake-case naming conventions.
}
\examples{
\dontrun{
covariateValue <- getCovariateValueResult(cohortIds = c(342432,432423),
                                          databaseIds = c('eunomia', 'hcup'))
}

}
